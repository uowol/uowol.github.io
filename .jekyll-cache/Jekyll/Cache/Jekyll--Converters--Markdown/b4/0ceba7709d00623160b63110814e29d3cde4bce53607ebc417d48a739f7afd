I"#l<h2 id="info">Info</h2>
<h3 id="summary">Summary</h3>
<p>윈도우의 텍스트 뷰어 프로그램이 너무 적어 직접 만들어보았습니다. 웹 페이지로 동작하여금 하여 접근성을 높여보았습니다.</p>

<h3 id="platform">Platform</h3>
<p>HTML, Node.js</p>

<h3 id="functions">Functions</h3>
<ul>
  <li>필수기능:
    <ol>
      <li>✅ 텍스트 읽어오기</li>
      <li>✅ 파일 업로드하기</li>
      <li>✅ 책갈피 기능</li>
    </ol>
  </li>
  <li>추가기능:
    <ol>
      <li>❌ 저장소를 분할하여 여러 사용자가 사용할수 있게끔하기</li>
      <li>❌ 로그인 기능 구현하기</li>
    </ol>
  </li>
  <li>만족기능:
    <ol>
      <li>❌ 다양한 글꼴 및 크기 제공하기</li>
      <li>❌ 자간, 줄긴격 조절하기</li>
      <li>❌ 배경색 변화 주기, 블루라이팅 줄여보기</li>
      <li>❌ 눈 깜빡임 메시지 띄우기</li>
    </ol>
  </li>
</ul>

<h2 id="output">Output</h2>
<video controls="">
  <source src="/assets/imgs/post_23/output.mp4" type="video/mp4" />
Your browser does not support the video tag.
</video>

<h2 id="contents">Contents</h2>
<h3 id="서버-구축">서버 구축</h3>
<p>가장 처음 이 프로젝트를 기획했을 때는 <code class="language-plaintext highlighter-rouge">&lt;input type='file'&gt;</code> 태그를 사용하여 만드려 했었습니다. 하지만 보안상의 문제로 Explorer를 제외한 브라우저에서는 작동하지 않는 것을 깨닫고 다른 방법을 생각하던 중 서버를 사용해보면 어떨까하는 생각이 들었습니다. 하여 서버에 파일을 업로드하고 불러오는 방향으로 개발을 진행해보았습니다.</p>

<p>서버는 Node.js를 사용하여 구축하였고, 클라이언트는 Vue 라이브러리를 활용하여 만들었습니다.</p>

<p>추가로, 파일을 읽어오기 위해 <code class="language-plaintext highlighter-rouge">fs</code> 모듈을, 라우팅을 직관적으로 표시하기 위해 <code class="language-plaintext highlighter-rouge">express</code> 모듈을, 파일을 업로드하는데 사용하기 위해 <code class="language-plaintext highlighter-rouge">multer</code> 모듈을 설치 및 사용하였습니다.</p>

<p>❗ request의 body contents를 불러오기 위해선 body-parser 모듈을 사용했었지만, express 모듈이 해당 기능을 대체할 수 있습니다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// before</span>
<span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">bodyParser</span><span class="p">.</span><span class="nx">urlencoded</span><span class="p">({</span><span class="na">extended</span><span class="p">:</span> <span class="kc">false</span><span class="p">}));</span>
<span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">bodyParser</span><span class="p">.</span><span class="nx">json</span><span class="p">());</span>
<span class="c1">// after</span>
<span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">express</span><span class="p">.</span><span class="nx">urlencoded</span><span class="p">({</span><span class="na">extended</span><span class="p">:</span> <span class="kc">false</span><span class="p">}));</span>
<span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">express</span><span class="p">.</span><span class="nx">json</span><span class="p">());</span>
</code></pre></div></div>

<p>다음은 서버가 하는 일을 코드와 함께 간략하게 정리해보았습니다.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">GET</code>: <code class="language-plaintext highlighter-rouge">/</code> : Main 페이지를 띄웁니다.</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">app</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="dl">'</span><span class="s1">/</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">fs</span><span class="p">.</span><span class="nx">readFile</span><span class="p">(</span><span class="dl">'</span><span class="s1">./pages/index.html</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">utf8</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">text/html</span><span class="dl">'</span><span class="p">})</span>
        <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span>
    <span class="p">})</span>
<span class="p">})</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">GET</code>: <code class="language-plaintext highlighter-rouge">/files</code> : 저장소에 저장되어 있는 파일들의 이름을 반환합니다.</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">app</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="dl">'</span><span class="s1">/files</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">readdirSync</span><span class="p">(</span><span class="nx">__dirname</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">/storage</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">utf8</span><span class="dl">'</span><span class="p">)</span>
    <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span>
<span class="p">})</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">GET</code>: <code class="language-plaintext highlighter-rouge">/files/:file</code> : <code class="language-plaintext highlighter-rouge">:file</code>에 들어간 “파일이름”으로 저장소에서 탐색하여 텍스트의 내용을 반환합니다. 이 때, 어디까지 읽었는지와 북마크의 유무에 대한 정보를 함께 반환합니다.</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">app</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="dl">'</span><span class="s1">/files/:file</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">file</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">file</span>
    <span class="nx">fs</span><span class="p">.</span><span class="nx">readFile</span><span class="p">(</span><span class="s2">`./cache/datastore.json`</span><span class="p">,</span> <span class="dl">'</span><span class="s1">utf-8</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="kd">let</span> <span class="nx">datastore</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
        
        <span class="nx">fs</span><span class="p">.</span><span class="nx">readFile</span><span class="p">(</span><span class="s2">`./storage/</span><span class="p">${</span><span class="nx">file</span><span class="p">}</span><span class="s2">`</span><span class="p">,</span> <span class="dl">'</span><span class="s1">utf-8</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">datastore</span><span class="p">).</span><span class="nx">includes</span><span class="p">(</span><span class="nx">file</span><span class="p">))</span> 
            <span class="nx">datastore</span><span class="p">[</span><span class="nx">file</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
                <span class="na">scrollTop</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
                <span class="na">bookmarkId</span><span class="p">:</span> <span class="kc">null</span>
            <span class="p">};</span>
            <span class="nx">res</span><span class="p">.</span><span class="kd">set</span><span class="p">(</span><span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">text/json</span><span class="dl">'</span><span class="p">);</span>
            <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">({</span>
                <span class="na">data</span><span class="p">:</span> <span class="nx">data</span><span class="p">,</span>
                <span class="na">scrollTop</span><span class="p">:</span> <span class="nx">datastore</span><span class="p">[</span><span class="nx">file</span><span class="p">].</span><span class="nx">scrollTop</span><span class="p">,</span>
                <span class="na">bookmarkId</span><span class="p">:</span> <span class="nx">datastore</span><span class="p">[</span><span class="nx">file</span><span class="p">].</span><span class="nx">bookmarkId</span>
            <span class="p">})</span>
        <span class="p">})</span>
    <span class="p">})</span>
<span class="p">})</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">POST</code>: <code class="language-plaintext highlighter-rouge">/uploadbookmark</code> : 현재 <code class="language-plaintext highlighter-rouge">:file</code>의 bookmark를 사용자 Cache에 저장합니다.</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">app</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="dl">'</span><span class="s1">/uploadbookmark</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="p">{</span><span class="nx">title</span><span class="p">,</span> <span class="nx">scrollTop</span><span class="p">,</span> <span class="nx">bookmarkId</span><span class="p">}</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span>
    <span class="nx">fs</span><span class="p">.</span><span class="nx">readFile</span><span class="p">(</span><span class="dl">'</span><span class="s1">./cache/datastore.json</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">utf-8</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="kd">let</span> <span class="nx">datastore</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">datastore</span><span class="p">).</span><span class="nx">includes</span><span class="p">(</span><span class="nx">title</span><span class="p">))</span> 
            <span class="nx">datastore</span><span class="p">[</span><span class="nx">title</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
                <span class="na">scrollTop</span><span class="p">:</span> <span class="nx">scrollTop</span><span class="p">,</span>
                <span class="na">bookmarkId</span><span class="p">:</span> <span class="nx">bookmarkId</span>
            <span class="p">};</span>
        <span class="k">else</span><span class="p">{</span>
            <span class="nx">datastore</span><span class="p">[</span><span class="nx">title</span><span class="p">].</span><span class="nx">scrollTop</span> <span class="o">=</span> <span class="nx">scrollTop</span>
            <span class="nx">datastore</span><span class="p">[</span><span class="nx">title</span><span class="p">].</span><span class="nx">bookmarkId</span> <span class="o">=</span> <span class="nx">bookmarkId</span>
        <span class="p">}</span>
        <span class="nx">fs</span><span class="p">.</span><span class="nx">writeFileSync</span><span class="p">(</span><span class="dl">'</span><span class="s1">./cache/datastore.json</span><span class="dl">'</span><span class="p">,</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">datastore</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span> <span class="dl">'</span><span class="s1">utf-8</span><span class="dl">'</span><span class="p">);</span>
        <span class="c1">// res.set('Content-Type', 'text/json');</span>
        <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">()</span>
    <span class="p">})</span>
<span class="p">})</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">POST</code>: <code class="language-plaintext highlighter-rouge">/uploadfile</code> : 저장소에 새로운 파일을 업로드합니다.</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">app</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="dl">'</span><span class="s1">/uploadfile</span><span class="dl">'</span><span class="p">,</span> <span class="nx">upload</span><span class="p">.</span><span class="nx">single</span><span class="p">(</span><span class="dl">'</span><span class="s1">file</span><span class="dl">'</span><span class="p">),</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">)</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">file</span><span class="p">)</span>
    <span class="nx">res</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">204</span><span class="p">).</span><span class="nx">redirect</span><span class="p">(</span><span class="dl">'</span><span class="s1">/</span><span class="dl">'</span><span class="p">)</span>
<span class="p">})</span>
</code></pre></div></div>

<h3 id="텍스트-읽어오기">텍스트 읽어오기</h3>
<p>앞서 설명한 것처럼 ‘텍스트 읽어오기’ 기능은 <code class="language-plaintext highlighter-rouge">GET: /files/:file</code>에서 작동합니다.</p>

<p>읽어올 파일명은 파라미터로 넘어온 <code class="language-plaintext highlighter-rouge">:file</code>에서 가져옵니다.</p>

<p>본격적인 텍스트의 내용을 읽기 전에 사용자 Cache를 불러와 이전에 사용자가 해당 파일을 읽은 적이 있는지 여부를 판단합니다.</p>

<p>사용자의 열람 유무를 바탕으로 텍스트의 내용과 북마크 유무, 그리고 어디까지 읽었는지를 함께 반환합니다.</p>

<p>반환된 정보는 이후 html에 명시된 javascript와 vue를 통해 화면에 표시됩니다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Server</span>
<span class="nx">app</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="dl">'</span><span class="s1">/files/:file</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">file</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">file</span>
    <span class="nx">fs</span><span class="p">.</span><span class="nx">readFile</span><span class="p">(</span><span class="s2">`./cache/datastore.json`</span><span class="p">,</span> <span class="dl">'</span><span class="s1">utf-8</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="kd">let</span> <span class="nx">datastore</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
        
        <span class="nx">fs</span><span class="p">.</span><span class="nx">readFile</span><span class="p">(</span><span class="s2">`./storage/</span><span class="p">${</span><span class="nx">file</span><span class="p">}</span><span class="s2">`</span><span class="p">,</span> <span class="dl">'</span><span class="s1">utf-8</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">datastore</span><span class="p">).</span><span class="nx">includes</span><span class="p">(</span><span class="nx">file</span><span class="p">))</span> 
            <span class="nx">datastore</span><span class="p">[</span><span class="nx">file</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
                <span class="na">scrollTop</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
                <span class="na">bookmarkId</span><span class="p">:</span> <span class="kc">null</span>
            <span class="p">};</span>
            <span class="nx">res</span><span class="p">.</span><span class="kd">set</span><span class="p">(</span><span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">text/json</span><span class="dl">'</span><span class="p">);</span>
            <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">({</span>
                <span class="na">data</span><span class="p">:</span> <span class="nx">data</span><span class="p">,</span>
                <span class="na">scrollTop</span><span class="p">:</span> <span class="nx">datastore</span><span class="p">[</span><span class="nx">file</span><span class="p">].</span><span class="nx">scrollTop</span><span class="p">,</span>
                <span class="na">bookmarkId</span><span class="p">:</span> <span class="nx">datastore</span><span class="p">[</span><span class="nx">file</span><span class="p">].</span><span class="nx">bookmarkId</span>
            <span class="p">})</span>
        <span class="p">})</span>
    <span class="p">})</span>
<span class="p">})</span>
<span class="c1">// Client</span>

<span class="p">...</span>

<span class="nx">fetch</span><span class="p">(</span><span class="s2">`http://localhost:3000/files/</span><span class="p">${</span><span class="nx">t</span><span class="p">.</span><span class="nx">innerText</span><span class="p">}</span><span class="s2">`</span><span class="p">)</span> <span class="c1">// click한 파일명으로 서버에 요청을 보냄</span>
    <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">())</span>                        <span class="c1">// json 데이터 파싱</span>
    <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="nx">app</span><span class="p">.</span><span class="nx">bookmarkId</span> <span class="o">=</span> <span class="nx">res</span><span class="p">.</span><span class="nx">bookmarkId</span><span class="p">;</span>            <span class="c1">// Vue 어플리케이션의 data 값 변경</span>
        <span class="nx">app</span><span class="p">.</span><span class="nx">scrollTop</span> <span class="o">=</span> <span class="nx">res</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">;</span>              <span class="c1">// Vue 어플리케이션의 data 값 변경</span>
        <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">'</span><span class="se">\n</span><span class="dl">'</span><span class="p">);</span>                <span class="c1">// 읽은 텍스트 파일을 줄마다 잘라서 저장 =&gt; Array()</span>
    <span class="p">})</span>
    <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="nx">app</span><span class="p">.</span><span class="nx">text</span> <span class="o">=</span> <span class="nx">res</span><span class="p">)</span>                    <span class="c1">// 배열형식의 데이터를 Vue data에 저장 =&gt; v-for를 사용해 화면에 표시됨</span>
    <span class="p">.</span><span class="nx">then</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">app</span><span class="p">.</span><span class="nx">bookmarkId</span><span class="p">)</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">app</span><span class="p">.</span><span class="nx">bookmarkId</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundColor</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">#ffc4bb</span><span class="dl">'</span><span class="p">;</span>   <span class="c1">// 북마크 표시</span>
        <span class="nx">textplace</span><span class="p">.</span><span class="nx">scrollTop</span> <span class="o">=</span> <span class="nx">app</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">;</span>                                                            <span class="c1">// 이전에 읽은 곳까지 이동</span>
    <span class="p">})</span>
</code></pre></div></div>

<h3 id="파일-업로드하기">파일 업로드하기</h3>
<p>앞서 말했듯이 파일업로드에는 <code class="language-plaintext highlighter-rouge">multer</code>모듈을 사용하였습니다.</p>

<p>이 모듈을 사용하면 단일 파일을 업로드할 때 <code class="language-plaintext highlighter-rouge">upload.single('file')</code> 모듈을 앱에 등록하여 실행시켜주기만 하면 됩니다. 굉장히 간단하죠 :)</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">app</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="dl">'</span><span class="s1">/uploadfile</span><span class="dl">'</span><span class="p">,</span> <span class="nx">upload</span><span class="p">.</span><span class="nx">single</span><span class="p">(</span><span class="dl">'</span><span class="s1">file</span><span class="dl">'</span><span class="p">),</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">)</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">file</span><span class="p">)</span>
    <span class="nx">res</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">204</span><span class="p">).</span><span class="nx">redirect</span><span class="p">(</span><span class="dl">'</span><span class="s1">/</span><span class="dl">'</span><span class="p">)</span>
<span class="p">})</span>
</code></pre></div></div>
:ET