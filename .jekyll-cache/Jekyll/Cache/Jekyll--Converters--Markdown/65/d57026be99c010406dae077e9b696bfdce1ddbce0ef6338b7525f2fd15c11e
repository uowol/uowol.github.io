I"/<h2 id="카카오톡-로그인--로그아웃">카카오톡 로그인 / 로그아웃</h2>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>kakao API-login</title>
    <script src="https://developers.kakao.com/sdk/js/kakao.js"></script>
    <script>
        Kakao.init("cbfbe87181425dc740113e63a36a0321")
        const REST_API_KEY = "b0ced927e5fc9b17704e2cf109a061f8"
        const JS_KEY = "cbfbe87181425dc740113e63a36a0321"
        // const REDIRECT_URI = "https://uowol.github.io/posts/post-14"
        const REDIRECT_URI = "http://127.0.0.1:4000/posts/post-14"
    </script>
</head>
<body id="body">
    <a id="btn_login" href="javascript:login()">
        <img src="/assets/imgs/post_14/kakao_login_medium_narrow.png" alt="btn_kakao" />
    </a>
    <a id="btn_logout" href="javascript:logout()" style="display:none">로그아웃</a><br />
    <a id="btn_unlink" href="javascript:unlink()" style="display:none">카카오톡 연동 해제</a>
    <script>
        // Using this function for making a object to the fixed-params-data for Content-type:x-www-form-urlencoded
        const buildForm = data => {
            const keys = Object.keys(data)
            const form = []
            
            for (let i = 0, l = keys.length; i < l; i++) {
                form.push(encodeURIComponent(keys[i]) + '=' + encodeURIComponent(data[keys[i]]))
            }
            
            return form.join('&')
        }

        let ACCESS_TOKEN = Kakao.Auth.getAccessToken() // will be save access token.

        if(ACCESS_TOKEN){
            btn_logout.style.display = 'inline'
            btn_unlink.style.display = 'inline'
            btn_login.style.display = 'none'
        }else{
            if(location.search.indexOf("?") != -1){ // IF redirected(logined)
            
                let [res, content] = location.search.substr(location.search.indexOf("?") + 1).split('='); // get param(only one param is there)
            
                if(res == "error")
                    alert("로그인 실패, 다시 시도하십시오.")
                else if(res == "code"){
                    const AUTHORIZE_CODE = content // is a code be used for getting a token.
                    let params = {
                        grant_type: "authorization_code",
                        client_id: REST_API_KEY,
                        redirect_uri: REDIRECT_URI,
                        code: AUTHORIZE_CODE
                    }
                    fetch("https://kauth.kakao.com/oauth/token", { // Ajax asynchronous communicate, get the token using the code 
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'
                        },
                        body: buildForm(params)
                    }).then(res => res.json()) // get json data
                    .then(json => ACCESS_TOKEN = json.access_token) // save access token
                    .then(token => {
                        Kakao.Auth.setAccessToken(token)
                        btn_logout.style.display = 'inline'
                        btn_unlink.style.display = 'inline'
                        btn_login.style.display = 'none'
                    })
                }
            }
        }
        

        // onclick event handlers
        const login = () => {
            Kakao.Auth.authorize({
                redirectUri: REDIRECT_URI,
                scope: 'friends',
            });
        }
        const logout = () => {
            if (!Kakao.Auth.getAccessToken()) {
                console.log('Not logged in.');
                return;
            }
            Kakao.Auth.logout(function() {
                console.log(Kakao.Auth.getAccessToken());
                btn_logout.style.display = 'none'
                btn_unlink.style.display = 'none'
                btn_login.style.display = 'inline'
            });
        }
        const unlink = () => {
            Kakao.API.request({
                url: '/v1/user/unlink',
                success: function(response) {
                    alert('카카오톡 연동이 성공적으로 해제되었습니다.');
                    btn_logout.style.display = 'none'
                    btn_unlink.style.display = 'none'
                    btn_login.style.display = 'inline'
                    Kakao.Auth.setAccessToken('')
                },
                fail: function(error) {
                    console.log(error);
                },
            });
        }
    </script>
</body>
</html>

<h2 id="주저리주저리징징">주저리주저리징징</h2>
<p>처음(11/27)은 REST API만 사용해서 진행하려고 했습니다만,</p>

<p><del>그즈그튼</del> <strong>CORS</strong>가 절 가로막았습니다.</p>

<p>새벽 4시까지 CORS, Fetch API, 프로토콜 등을 공부하고나서야 원인을 알아냈습니다.</p>

<p>자바스크립트는 기본적으로 브라우저에서 작동하며,</p>

<p>서버(kakao)에서 요청이 들어온 사이트(uowol.github.io)를 신뢰한다는 데이터를 보내지 않으면 브라우저에서 보안 에러가 나는 것으로 보입니다.</p>

<p>그러나 카카오 API는 JavaScript API 역시 지원하고 있어 브라우저에선 REST API가 아닌 JavaScript API를 쓰면 에러가 나지 않습니다.</p>

<hr />

<h3 id="2020-11-30-추가-내용">2020-11-30 추가 내용</h3>
<p>비슷한 문제에 달린 카카오측 답변을 통하여 다음과 같은 정보를 알 수 있었습니다.</p>

<p>REST API는 크로스도메인 요청을 허용하고 있지 않기 때문에 Ajax로 직접 요청하는 것이 안된다고 합니다.</p>

<p>따라서 웹 앱에서 API를 사용하기 위해선</p>

<p><strong>첫째</strong>, REST API를 사용하고 SERVER to SERVER로 요청하거나</p>

<p><strong>둘째</strong>, JavaScript SDK를 활용하면 된다고 합니다.</p>

<h2 id="카카오톡-친구-연락-주기-확인하기">카카오톡 친구 연락 주기 확인하기</h2>
<p>아래는 카카오톡 Developer 사이트에서 보여주는 활용예제입니다. 
<img src="https://developers.kakao.com/docs/latest/ko/assets/style/images/message/message_common_friend.png" alt="만들고 싶었던 것" title="만들고싶었던거" /></p>

<p>이번 포스팅에선 카카오톡 친구 목록을 가져와 최근연락한 날로부터 얼마간의 시간이 지났는 지 알아보는 프로그램을 만들어보고자합니다.</p>

<h3 id="친구목록-가져오기">친구목록 가져오기</h3>

<p><button onclick="getFriends()" id="btn_get_friends" disabled="disabled">친구목록 가져오기</button></p>
<div id="div_friends">
    <ul id="list_friends">
    </ul>
</div>

<script>
    const getFriends = ()=>{
        Kakao.API.request({
            url: '/v1/api/talk/friends',
            success: function(response) {
                console.log(response);
            },
            fail: function(error) {
                console.log(error);
            }
        });
    }
</script>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- 제대로 실행되지 않는 버튼은 비활성화해두었습니다. --&gt;</span>
<span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">"getFriends()"</span> <span class="na">id=</span><span class="s">'btn_get_friends'</span> <span class="na">disabled = </span><span class="s">"disabled"</span><span class="nt">&gt;</span>친구목록 가져오기<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"div_friends"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">'list_friends'</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/ul&gt;</span>
<span class="nt">&lt;/div&gt;</span>

<span class="nt">&lt;script&gt;</span>
    <span class="kd">const</span> <span class="nx">getFriends</span> <span class="o">=</span> <span class="p">()</span><span class="o">=&gt;</span><span class="p">{</span>
        <span class="nx">Kakao</span><span class="p">.</span><span class="nx">API</span><span class="p">.</span><span class="nx">request</span><span class="p">({</span>
            <span class="na">url</span><span class="p">:</span> <span class="dl">'</span><span class="s1">/v1/api/talk/friends</span><span class="dl">'</span><span class="p">,</span>
            <span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
            <span class="p">},</span>
            <span class="na">fail</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">});</span>
    <span class="p">}</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<h2 id="이번엔-또-뭐가-문제야">이번엔 또 뭐가 문제야,</h2>

<p>아니나 다를까 이번에도 문제가 발생했습니다. <del>하루에 20줄 짜리 코드 이해하는 것도 벅차네요</del></p>

<p>원래 계획이라면 카카오톡에 로그인하여 계정과 연동된 친구목록을 가져오는 것부터 시작이었으나, 카카오에서 제공하는 데이터의 요구조건을 만족하지 못하여 첫 단추부터 엇나가버렸습니다.</p>

<p>카카오에서 친구목록을 받아오기 위해선 앱을 카카오에 <strong>검수신청</strong>을 해야하는데</p>
<ol>
  <li><strong>검수 전</strong>이라면,
    <ul>
      <li>해당 앱에 등록한 팀원의 목록만 받아올 수 있습니다. <br />(이메일로 추가할 수 있습니다.)</li>
    </ul>
  </li>
  <li><strong>검수 후</strong>라면,
    <ol>
      <li>호출한 사람의 <strong>카카오톡 친구</strong>이여야 합니다. (이건 문제가 되지 않습니다.)</li>
      <li><strong>앱 가입자</strong>이여야 합니다. (이게 문제가 됩니다.)</li>
      <li>앱에 가입할 때, <strong>친구목록 활용 동의</strong>에 체크 해주어야 합니다.</li>
    </ol>
  </li>
</ol>

<p>하지만 이 문제는 처음 생각했던 그림과 조금 다를 뿐이지 개발을 하는데 있어서는 큰 문제가 되지 않습니다.</p>

<hr />

<p>가장 큰 문제는 <strong>카카오톡 메시지 내역</strong>을 카카오API에서 제공하지 않는다는 것입니다.
<img src="/assets/imgs/post_14/kakao.jpg" alt="카카오의 답변" title="카카오의 답변" /></p>

<p>메시지 내용을 제공하지 않기 때문에 최근 메시지가 무엇인지, 누구와 얼마나 연락하지 않았는지 등은 확인할 수가 없게되었습니다… T-T</p>

<h2 id="그래서">그래서,</h2>

<p>또 포기하고 다른거 찾느냐?</p>

<p>오기가 생겨서 다른 방향으로 다시 진행해보려 합니다.</p>

<p>다음 <a href="https://en4u.co.kr/%EC%B9%B4%EC%B9%B4%EC%98%A4%ED%86%A1%EB%82%B4%EB%B3%B4%EB%82%B4%EA%B8%B0/">링크</a>에서 볼 수 있듯이 카카오 API에서는 대화 내용을 제공하지 않지만, 카카오톡 어플리케이션에서 대화내용을 추출할 수가 있습니다.</p>

<p>이것을 이용하여 다음 포스팅에서는 대화 내용 데이터를 가지고 이것저것 만져보는 시간을 가져보도록하겠습니다.</p>

:ET